# docker-compose  --file docker-compose-project.yml --env-file .env_prod  up -d 
name: fastparking
services:
  pg:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #expose:
    #  - "${POSTGRES_PORT}"
    ports:
       - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ../Database/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  code :
    build: ../FRONTEND
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - "8000:8000"
    volumes:
      - ../Database/django_cache:/tmp/django_cache
      # Health check command
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/health/ || exit 1"]
      interval: 60s
      timeout: 5s
      retries: 5
    depends_on:
      pg:
        condition: service_healthy
    environment:
      POSTGRES_HOST: pg
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_SERVER: ${MAIL_SERVER}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME}
      TELEGRAM_NEWS_NAME: ${TELEGRAM_NEWS_NAME}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      

 
